{"version":3,"file":"static/js/116.ec2da9de.chunk.js","mappings":"6NAGaA,GAAaC,EAAAA,EAAAA,GAAOC,EAAAA,GAAPD,CAAH,0vBA6CVE,EAAmBF,EAAAA,EAAAA,OAAH,sjBA2BhBG,GAAqBH,EAAAA,EAAAA,GAAOI,EAAAA,GAAPJ,CAAH,oFAMlBK,EAAgBL,EAAAA,EAAAA,IAAH,6G,qECnEpBM,EAAmBC,EAAAA,KAAaC,MAAM,CAC1CC,MAAOF,EAAAA,KAEJG,OACAC,QACC,4CACA,yBAEDC,SAAS,4BACZC,SAAUN,EAAAA,KAEPO,IAAI,EAAG,yBACPC,IAAI,GAAI,yBACRH,SAAS,yBAGRI,EAAgB,CACpBP,MAAO,GACPI,SAAU,IAwDZ,EArDkB,WAChB,IAAMI,GAAeC,EAAAA,EAAAA,MACfC,GAAkBD,EAAAA,EAAAA,MAElBE,GAAWC,EAAAA,EAAAA,MACTC,GAAeC,EAAAA,EAAAA,KAAfD,WAYR,OACE,SAAC,KAAD,CACEN,cAAeA,EACfV,iBAAkBA,EAClBkB,SAda,SAACC,EAAMC,GACtBN,GAASO,EAAAA,EAAAA,IAAUF,IAChBG,SACAC,MAAK,SAAAC,GAAC,OAAIC,EAAAA,GAAAA,QAAA,mBAA0BD,EAAEE,KAAKC,KAAjC,MAAJ,IACNC,OAAM,WACLH,EAAAA,GAAAA,MAAY,yCACb,IACCT,GAAYI,EAAOS,WACxB,EAGC,UAKE,SAACpC,EAAD,WACE,UAACM,EAAD,YACE,4BACE,kBAAO+B,QAASnB,EAAhB,SAA8B,WAC9B,SAAC,KAAD,CACEoB,GAAIpB,EACJqB,KAAK,QACLL,KAAK,QACLM,YAAY,yBAEd,SAACpC,EAAD,CAAoB8B,KAAK,QAAQO,UAAU,YAE7C,4BACE,kBAAOJ,QAASjB,EAAhB,SAAiC,cACjC,SAAC,KAAD,CACEkB,GAAIlB,EACJmB,KAAK,WACLL,KAAK,WACLM,YAAY,oBAEd,SAACpC,EAAD,CAAoB8B,KAAK,WAAWO,UAAU,YAGhD,SAACtC,EAAD,CAAkBoC,KAAK,SAAvB,SAAgC,gBAKzC,EClFD,EAFkB,kBAAM,SAAC,EAAD,GAAN,C","sources":["components/LoginForm/LoginForm.styled.jsx","components/LoginForm/LoginForm.jsx","pages/LoginPage.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Form, ErrorMessage } from 'formik';\n\nexport const StyledForm = styled(Form)`\n  label {\n    color: rgb(99, 99, 99);\n    margin-bottom: 4px;\n  }\n\n  input {\n    max-width: 254px;\n    width: 100%;\n    display: block;\n    height: 28px;\n\n    padding-left: 4px;\n\n    color: rgb(99, 99, 99);\n\n    outline: 1px solid rgb(198, 198, 198);\n    border-radius: 4px;\n    border: transparent;\n\n    transition: box-shadow 150ms linear, outline 150ms linear,\n      color 100ms linear;\n\n    &::placeholder {\n      color: rgba(99, 99, 99, 0.534);\n    }\n\n    &:hover,\n    &:focus {\n      outline: 1px solid rgb(99, 99, 99);\n    }\n\n    &:focus {\n      box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\n    }\n  }\n\n  & div {\n    display: flex;\n    flex-direction: column;\n\n    margin-bottom: 12px;\n  }\n`;\n\nexport const StyledFormButton = styled.button`\n  display: block;\n  height: 28px;\n  margin-left: auto;\n\n  color: rgb(241, 241, 241);\n\n  border: 1px solid rgb(235, 104, 18);\n  border-radius: 4px;\n  background-color: rgb(235, 104, 18);\n\n  transition: box-shadow 150ms linear, background-color 100ms linear,\n    color 100ms linear;\n\n  &:hover,\n  &:focus {\n    background-color: rgb(241, 241, 241);\n    color: rgb(235, 104, 18);\n    box-shadow: rgba(0, 0, 0, 0.16) 0px 1px 4px;\n  }\n\n  &:active {\n    background-color: rgb(59, 59, 59);\n    color: rgb(248, 248, 248);\n  }\n`;\n\nexport const StyledErrorMessage = styled(ErrorMessage)`\n  padding-top: 4px;\n  font-size: 12px;\n  color: #d40606;\n`;\n\nexport const FormContainer = styled.div`\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 260px;\n`;\n","import { Field, Formik } from 'formik';\nimport {\n  StyledForm,\n  FormContainer,\n  StyledErrorMessage,\n  StyledFormButton,\n} from './LoginForm.styled';\nimport { useDispatch } from 'react-redux';\nimport { loginUser } from 'redux/auth/auth-operations';\nimport { nanoid } from 'nanoid';\nimport * as yup from 'yup';\nimport { useAuth } from 'hooks';\nimport { toast } from 'react-hot-toast';\n\nconst validationSchema = yup.object().shape({\n  email: yup\n    .string()\n    .trim()\n    .matches(\n      /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\n      'Invalid email address'\n    )\n    .required('Enter your email address'),\n  password: yup\n    .string()\n    .min(8, 'minimum 8 characters ')\n    .max(32, 'maximum 32 characters')\n    .required('Enter your password'),\n});\n\nconst initialValues = {\n  email: '',\n  password: '',\n};\n\nconst LoginForm = () => {\n  const emailInputId = nanoid();\n  const passwordInputId = nanoid();\n\n  const dispatch = useDispatch();\n  const { isLoggedIn } = useAuth();\n\n  const onSubmit = (data, action) => {\n    dispatch(loginUser(data))\n      .unwrap()\n      .then(r => toast.success(`Welcome, ${r.user.name} !`))\n      .catch(() => {\n        toast.error('Authorization error. Try again, please');\n      });\n    if (isLoggedIn) action.resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={validationSchema}\n      onSubmit={onSubmit}\n    >\n      <StyledForm>\n        <FormContainer>\n          <div>\n            <label htmlFor={emailInputId}>Email</label>\n            <Field\n              id={emailInputId}\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"Enter email address\"\n            />\n            <StyledErrorMessage name=\"email\" component=\"div\" />\n          </div>\n          <div>\n            <label htmlFor={passwordInputId}>Password</label>\n            <Field\n              id={passwordInputId}\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"Enter password\"\n            />\n            <StyledErrorMessage name=\"password\" component=\"div\" />\n          </div>\n\n          <StyledFormButton type=\"submit\">Login</StyledFormButton>\n        </FormContainer>\n      </StyledForm>\n    </Formik>\n  );\n};\n\nexport default LoginForm;\n","import LoginForm from 'components/LoginForm/LoginForm';\n\nconst LoginPage = () => <LoginForm />;\n\nexport default LoginPage;\n"],"names":["StyledForm","styled","Form","StyledFormButton","StyledErrorMessage","ErrorMessage","FormContainer","validationSchema","yup","shape","email","trim","matches","required","password","min","max","initialValues","emailInputId","nanoid","passwordInputId","dispatch","useDispatch","isLoggedIn","useAuth","onSubmit","data","action","loginUser","unwrap","then","r","toast","user","name","catch","resetForm","htmlFor","id","type","placeholder","component"],"sourceRoot":""}