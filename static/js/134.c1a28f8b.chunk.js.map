{"version":3,"file":"static/js/134.c1a28f8b.chunk.js","mappings":"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","sources":["components/ContactsForm/ContactsForm.styled.jsx","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/contacts/selectors.js","components/ContactsForm/ContactsForm.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/Contacts/Contacts.styled.jsx","components/Contacts/Contacts.jsx","components/ContactsList/ContactsList.styled.jsx","components/ContactsList/ContactsList.jsx","pages/ContactsPage.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { ErrorMessage } from 'formik';\n\nexport const StyledFormPhonebookButton = styled.button`\n  display: block;\n  height: 28px;\n  margin-left: auto;\n\n  color: rgb(241, 241, 241);\n\n  border: 1px solid rgb(235, 104, 18);\n  border-radius: 4px;\n  background-color: rgb(235, 104, 18);\n\n  transition: box-shadow 150ms linear, background-color 100ms linear,\n    color 100ms linear;\n\n  &:hover,\n  &:focus {\n    background-color: rgb(241, 241, 241);\n    color: rgb(235, 104, 18);\n    box-shadow: rgba(0, 0, 0, 0.16) 0px 1px 4px;\n  }\n\n  &:active {\n    background-color: rgb(59, 59, 59);\n    color: rgb(248, 248, 248);\n  }\n`;\n\nexport const StyledErrorMessage = styled(ErrorMessage)`\n  padding-top: 4px;\n  font-size: 12px;\n  color: #d40606;\n`;\n\nexport const FormContainer = styled.div`\n  display: flex;\n  align-items: flex-start;\n  margin-bottom: 24px;\n\n  @media (max-width: 440px) {\n    flex-direction: column;\n    align-items: flex-start;\n  }\n`;\n\nexport const FieldWrapper = styled.div`\n  display: block;\n  flex-basis: 50%;\n  display: flex;\n  flex-direction: column;\n\n  label {\n    display: block;\n    color: rgb(99, 99, 99);\n    margin-bottom: 4px;\n    margin-right: 8px;\n  }\n\n  input {\n    display: block;\n    max-width: 100%;\n    height: 28px;\n    padding-left: 4px;\n\n    color: rgb(99, 99, 99);\n\n    outline: 1px solid rgb(198, 198, 198);\n    border-radius: 4px;\n    border: transparent;\n\n    transition: box-shadow 150ms linear, outline 150ms linear,\n      color 100ms linear;\n\n    box-sizing: border-box;\n\n    &::placeholder {\n      color: rgba(99, 99, 99, 0.534);\n    }\n\n    &:hover,\n    &:focus {\n      outline: 1px solid rgb(99, 99, 99);\n    }\n\n    &:focus {\n      box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\n    }\n  }\n\n  &:not(:last-child) {\n    margin-right: 24px;\n  }\n\n  @media (max-width: 440px) {\n    margin-bottom: 12px;\n\n    input {\n      max-width: 100%;\n      width: 260px;\n    }\n  }\n`;\n","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) =>\n    contacts.filter(({ name }) =>\n      name.toLowerCase().includes(filter.toLowerCase())\n    )\n);\n","import React from 'react';\nimport { nanoid } from 'nanoid';\nimport {\n  StyledFormPhonebookButton,\n  StyledErrorMessage,\n  FormContainer,\n  FieldWrapper,\n} from './ContactsForm.styled';\nimport { Field, Formik, Form } from 'formik';\nimport * as yup from 'yup';\nimport { addContact } from 'redux/contacts/contacts-operations';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\n\nconst validationSchema = yup.object().shape({\n  name: yup\n    .string()\n    .trim()\n    .matches(\n      /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n      \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n    )\n    .required(),\n  number: yup\n    .string()\n    .trim()\n    .matches(\n      /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/,\n      'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n    )\n    .required(),\n});\n\nconst initialValues = {\n  name: '',\n  number: '',\n};\n\nconst ContactsForm = () => {\n  const nameInputId = nanoid();\n  const numberInputId = nanoid();\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const onSubmit = (data, action) => {\n    const { name } = data;\n\n    console.log(data);\n\n    const contactExist = contacts\n      .map(({ name }) => name.toLowerCase())\n      .includes(name.toLowerCase());\n\n    if (contactExist) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n    dispatch(addContact(data));\n\n    action.resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={validationSchema}\n      onSubmit={onSubmit}\n    >\n      <Form>\n        <FormContainer>\n          <FieldWrapper>\n            <label htmlFor={nameInputId}>Name</label>\n            <Field\n              id={nameInputId}\n              type=\"text\"\n              name=\"name\"\n              placeholder=\"Enter name\"\n            />\n            <StyledErrorMessage name=\"name\" component=\"div\" />\n          </FieldWrapper>\n          <FieldWrapper>\n            <label htmlFor={numberInputId}>Number</label>\n            <Field\n              id={numberInputId}\n              type=\"tel\"\n              name=\"number\"\n              placeholder=\"Enter phone number\"\n            />\n            <StyledErrorMessage name=\"number\" component=\"div\" />\n          </FieldWrapper>\n        </FormContainer>\n        <StyledFormPhonebookButton type=\"submit\">\n          Add Contact\n        </StyledFormPhonebookButton>\n      </Form>\n    </Formik>\n  );\n};\n\nexport default ContactsForm;\n","import styled from '@emotion/styled';\nimport { Field } from 'formik';\n\nexport const StyledFilterInput = styled(Field)`\n  max-width: 254px;\n  width: 100%;\n  display: block;\n  height: 28px;\n  /* margin-right: auto;\n  margin-left: auto; */\n\n  padding-left: 4px;\n\n  color: rgb(99, 99, 99);\n\n  outline: 1px solid rgb(198, 198, 198);\n  border-radius: 4px;\n  border: transparent;\n\n  transition: box-shadow 150ms linear, outline 150ms linear, color 100ms linear;\n\n  &::placeholder {\n    color: rgb(99, 99, 99);\n  }\n\n  &:hover,\n  &:focus {\n    outline: 1px solid rgb(99, 99, 99);\n  }\n\n  &:focus {\n    box-shadow: rgba(0, 0, 0, 0.16) 0px 3px 6px, rgba(0, 0, 0, 0.23) 0px 3px 6px;\n  }\n`;\n","import React from 'react';\nimport { StyledFilterInput } from './Filter.styled';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectFilter } from 'redux/contacts/selectors';\nimport { setFilter } from 'redux/contacts/filter-slice';\n\nconst validationSchema = yup.object().shape({\n  filter: yup\n    .string()\n    .trim()\n    .matches(\n      /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n      'Enter name may contain only letters, apostrophe, dash and spaces.'\n    ),\n});\n\nconst FilterInput = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  const onChangeFilter = e => dispatch(setFilter(e.currentTarget.value));\n\n  return (\n    <Formik inititalValue={filter} validationSchema={validationSchema}>\n      <StyledFilterInput\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={onChangeFilter}\n        placeholder=\"Find contacts by name\"\n      />\n    </Formik>\n  );\n};\n\nexport default FilterInput;\n","import styled from '@emotion/styled';\n\nexport const StyledContacts = styled.ul`\n  list-style-type: none;\n  padding-left: 0;\n\n  li {\n    margin-bottom: 4px;\n\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n  }\n\n  li:not(:last-child) {\n    margin-bottom: 20px;\n  }\n`;\n\nexport const DeleteButton = styled.button`\n  display: block;\n  height: 28px;\n\n  color: rgba(99, 99, 99, 0.5);\n\n  background-color: rgba(240, 240, 240, 0.3);\n  border: 1px solid rgba(198, 198, 198, 0.3);\n  border-radius: 4px;\n\n  transition: box-shadow 150ms linear, background-color 100ms linear,\n    color 100ms linear;\n\n  &:hover,\n  &:focus {\n    color: rgb(240, 240, 240);\n\n    background-color: rgb(159, 159, 159);\n    border-color: rgb(159, 159, 159);\n    box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\n  }\n\n  &:active {\n    background-color: rgb(59, 59, 59);\n    color: rgb(248, 248, 248);\n  }\n`;\n\nexport const ContactWrapper = styled.div`\n  display: flex;\n`;\n\nexport const ContactsItem = styled.p`\n  margin-top: 0;\n  margin-bottom: 0;\n  margin-right: 8px;\n  font-weight: 600;\n  color: rgb(59, 59, 59);\n  margin-right: 12px;\n`;\n\nexport const ContactsNumber = styled.p`\n  margin-top: 0;\n  margin-bottom: 0;\n  font-weight: 600;\n  color: rgb(42, 104, 176);\n`;\n\nexport const ContactsName = styled.p`\n  color: rgb(59, 59, 59);\n`;\n","import React, { useEffect } from 'react';\nimport {\n  StyledContacts,\n  ContactsItem,\n  ContactsNumber,\n  DeleteButton,\n  ContactWrapper,\n} from './Contacts.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  fetchContacts,\n  deleteContact,\n} from 'redux/contacts/contacts-operations';\nimport {\n  selectIsLoading,\n  selectError,\n  selectVisibleContacts,\n} from 'redux/contacts/selectors';\nimport { Loader } from 'components/Loader';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const contacts = useSelector(selectVisibleContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <StyledContacts>\n      {isLoading && !error && <Loader />}\n      {contacts.map(({ id, name, number }) => (\n        <li key={id}>\n          <ContactWrapper>\n            <ContactsItem>{name}:</ContactsItem>\n            <ContactsNumber>{number}</ContactsNumber>\n          </ContactWrapper>\n          <DeleteButton onClick={() => dispatch(deleteContact(id))}>\n            Delete\n          </DeleteButton>\n        </li>\n      ))}\n    </StyledContacts>\n  );\n};\n\nexport default Contacts;\n","import styled from '@emotion/styled';\n\nexport const ListContainer = styled.div`\n  display: block;\n  margin-right: auto;\n`;\n\nexport const Header = styled.h3`\n  text-align: left;\n`;\n","import FilterInput from 'components/Filter';\nimport Contacts from 'components/Contacts';\nimport { Header, ListContainer } from './ContactsList.styled';\n\nconst ContactsList = () => (\n  <ListContainer>\n    <Header>Contacts</Header>\n    <FilterInput />\n    <Contacts />\n  </ListContainer>\n);\n\nexport default ContactsList;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport ContactsForm from 'components/ContactsForm';\nimport ContactsList from 'components/ContactsList';\nimport { Loader } from 'components/Loader';\nimport { fetchContacts } from 'redux/contacts/contacts-operations';\nimport { selectIsLoading } from 'redux/contacts/selectors';\n\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      <>\n        <h2>Phonebook</h2>\n        <ContactsForm />\n        <ContactsList />\n      </>\n    </>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["StyledFormPhonebookButton","styled","StyledErrorMessage","ErrorMessage","FormContainer","FieldWrapper","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilter","filter","selectVisibleContacts","toLowerCase","includes","validationSchema","yup","shape","trim","matches","required","number","initialValues","nameInputId","nanoid","numberInputId","dispatch","useDispatch","useSelector","onSubmit","data","action","console","log","alert","addContact","resetForm","htmlFor","id","type","placeholder","component","StyledFilterInput","Field","inititalValue","onChange","e","setFilter","currentTarget","StyledContacts","DeleteButton","ContactWrapper","ContactsItem","ContactsNumber","useEffect","fetchContacts","Loader","onClick","deleteContact","ListContainer","Header","Filter"],"sourceRoot":""}